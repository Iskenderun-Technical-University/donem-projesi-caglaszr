<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        EIA36z6UZ7ZCBqIpi2yEOeunktshCA2//9k=
</value>
  </data>
</root>